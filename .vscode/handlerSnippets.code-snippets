{
	"QueryHandler": {
		"prefix": "qhandler",
		"body": [
			"public class Query : IRequest<${1:ReturnObject}> { }",
			"",
			"        //the handler will handle http requests, and then send back responses",
			"        //will include all of our \"business logic\"",
			"        public class Handler : IRequestHandler<Query, ${1:ReturnObject}>",
			"        {",
			"            private only DataContext _context;",
			"            public Handler(DataContext context)",
			"            {",
			"                _context = context;",
			"            }",
			"",
			"            //gets all our activities from db",
			"            public async Task<${1:ReturnObject}> Handle(Query request, CancellationToken cancellationToken)",
			"            {",
			"                //handler logic goes here",
			"            }",
			"        }"
		],
		"description": "QueryHandler"
	},
	"CommandHandler": {
		"prefix": "chandler",
		"body": [
			"public class Command : IRequest",
			"        {",
			"            ",
			"        }",
			"        public class Handler : IRequestHandler<Command>",
			"        {",
			"            private readonly DataContext _context;",
			"            public Handler(DataContext context)",
			"            {",
			"                _context = context;",
			"            }",
			"            public async Task<Unit> Handle(Command request, CancellationToken cancellationToken)",
			"            {",
			"                //handler logic here",
			"                var success = await _context.SaveChangesAsync() > 0;",
			"                if(success) return Unit.Value;",
			"",
			"                throw new Exception(\"Problem saving changes\");",
			"            }",
			"        }"
		],
		"description": "CommandHandler"
	}
}